USE [DBA]
GO

-- Ensure the SessionAudit table exists and includes BlockingSessionID
IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'SessionAudit')
BEGIN
    CREATE TABLE dbo.SessionAudit (
        ID INT IDENTITY(1,1) PRIMARY KEY,
        Loginname SYSNAME,
        Hostname VARCHAR(200),
        Databasename SYSNAME,
        Programname VARCHAR(200),
        SessionID INT,
        BlockingSessionID INT NULL, -- NEW: Column to track blocking sessions
        StartTime DATETIME,
        SQLText XML NULL,
        QueryDuration VARCHAR(256),
        InsertedDate DATETIME DEFAULT GETDATE()
    );
END

GO

-- Create the stored procedure to capture active sessions including blocking session details
CREATE PROCEDURE dbo.CaptureActiveSessions
AS
BEGIN
    SET NOCOUNT ON;

    -- Temporary table for storing session details
    IF OBJECT_ID('tempdb..#SessionTemp') IS NOT NULL
        DROP TABLE #SessionTemp;

    CREATE TABLE #SessionTemp (
        Loginname SYSNAME,
        Hostname VARCHAR(200),
        Databasename SYSNAME,
        Programname VARCHAR(200),
        SessionID INT,
        BlockingSessionID INT NULL, -- NEW: Capture blocking session ID
        StartTime DATETIME,
        SQLText XML NULL,
        QueryDuration VARCHAR(256)
    );

    -- Capture active sessions with blocking details using sp_WhoIsActive
    EXEC [dbo].[sp_WhoIsActive] 
        @show_sleeping_spids = 2, 
        @output_column_list = '[login_name][host_name][database_name][program_name][session_id][blocking_session_id][start_time][sql_text][dd%]', 
        @destination_table = '#SessionTemp';

    -- Insert the captured data into the permanent audit table
    INSERT INTO dbo.SessionAudit (
        Loginname, Hostname, Databasename, Programname, 
        SessionID, BlockingSessionID, StartTime, SQLText, QueryDuration
    )
    SELECT 
        Loginname, Hostname, Databasename, Programname, 
        SessionID, BlockingSessionID, StartTime, SQLText, QueryDuration
    FROM #SessionTemp;

    -- Optional: Display the latest captured sessions
    SELECT * FROM dbo.SessionAudit ORDER BY InsertedDate DESC;
END

GO

-- Create a stored procedure to clean data older than 15 days
CREATE PROCEDURE dbo.CleanupOldSessions
AS
BEGIN
    SET NOCOUNT ON;

    -- Delete records older than 15 days
    DELETE FROM dbo.SessionAudit
    WHERE InsertedDate < DATEADD(DAY, -15, GETDATE());
    
    PRINT 'Old session records older than 15 days have been deleted.';
END

GO

-- Execute the capture stored procedure
EXEC dbo.CaptureActiveSessions;

-- Execute cleanup to remove sessions older than 15 days
EXEC dbo.CleanupOldSessions;
